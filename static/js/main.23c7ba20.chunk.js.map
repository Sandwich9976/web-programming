{"version":3,"sources":["MainPart/MainPart.module.css","AsteroidCard/AsteroidCardContent/AsteroidCardContent.module.css","AsteroidCard/Card.module.css","AsteroidCard/AsteroidCardAction/Action.module.css","AsteroidCard/AsteroidCardImage/AsteroidCardImage.module.css","AsteroidCard/AsteroidCardAction/AsteroidCardAction.jsx","AsteroidCard/AsteroidCardContent/AsteroidCardContent.jsx","AsteroidCard/AsteroidCardImage/AsteroidCardImage.jsx","AsteroidCard/AsteroidCard.jsx","MainPart/MainPart.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","distanceChooser","showDangerousOnly","distanceMode","activeMode","contentName","contentWrapper","contentDate","contentDistance","contentSize","card","adaptSolver","cardRed","action","actionText","actionGrade","asteroidImage","AsteroidCardAction","props","grade","react_default","a","createElement","className","styles","AsteroidCardContent","name","date","distance","size","toFixed","AsteroidCardImage","width","height","viewBox","fill","xmlns","d","AsteroidCard","AsteroidCardImage_AsteroidCardImage","AsteroidCardContent_AsteroidCardContent","AsteroidCardAction_AsteroidCardAction","MainPart","_useState","useState","list","monthNames","i","year","Math","random","push","MakeAsteroidsList","showMode","_useState2","Object","slicedToArray","asteroids","setAsteroids","type","value","onChange","e","objectSpread","target","checked","onClick","map","item","AsteroidCard_AsteroidCard","filter","App","react_router_dom","to","react_router","path","element","MainPart_MainPart","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.23c7ba20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"distanceChooser\":\"MainPart_distanceChooser__2mhIW\",\"showDangerousOnly\":\"MainPart_showDangerousOnly__2hBMd\",\"distanceMode\":\"MainPart_distanceMode__1zVvl\",\"activeMode\":\"MainPart_activeMode__2H7mv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentName\":\"AsteroidCardContent_contentName__3N9jP\",\"contentWrapper\":\"AsteroidCardContent_contentWrapper__3wwCs\",\"contentDate\":\"AsteroidCardContent_contentDate__sB1NN\",\"contentDistance\":\"AsteroidCardContent_contentDistance__2Qtfh\",\"contentSize\":\"AsteroidCardContent_contentSize__3V3av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__Jx2TW\",\"adaptSolver\":\"Card_adaptSolver__1qGBB\",\"cardRed\":\"Card_cardRed__3Z_TT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"Action_action__2WOuu\",\"actionText\":\"Action_actionText__2N5b-\",\"actionGrade\":\"Action_actionGrade__2C0IS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"asteroidImage\":\"AsteroidCardImage_asteroidImage__2mP-z\"};","import styles from \"./Action.module.css\"\r\nimport React from \"react\";\r\n\r\nexport const AsteroidCardAction = (props) =>{\r\n    const {grade} = props;\r\n    return (<div>\r\n                <div className={styles.actionGrade}>Оценка: {grade}</div>\r\n                <button className={styles.action}>\r\n                    <div className={styles.actionText}>На уничтожение </div>\r\n                </button>\r\n            </div>)\r\n}","import styles from \"./AsteroidCardContent.module.css\"\r\nimport React from \"react\"\r\n\r\nexport const AsteroidCardContent = (props) =>{\r\n    const {name, date, distance, size, distanceMode} = props\r\n    return (<div>\r\n                <div className={styles.contentName}>{name}</div>\r\n                <div className={styles.contentWrapper}>\r\n                    <div className={styles.contentDate}>Дата: {date}</div>\r\n                    <div className={styles.contentDistance}>\r\n                        Расстояние: {distanceMode?(distance/384400).toFixed(2):distance} {distanceMode?\"дист. до луны\":\"км\"}\r\n                    </div>\r\n                    <div className={styles.contentSize}>Размер: {size} м</div>\r\n                </div>\r\n            </div>)\r\n\r\n} ","import styles from \"./AsteroidCardImage.module.css\"\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport const AsteroidCardImage = () =>{\r\n    return (<svg className={styles.asteroidImage} width=\"71\" height=\"72\" viewBox=\"0 0 71 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M1.13589 42.1051C2.36992 45.5191 4.20391 49.2229 6.78391 51.3813C12.5054 56.1687 13.7315 57.7414 15.8437 67.3162C17.9558 76.891 27.7641 68.8204 27.7641 68.8204C27.7641 68.8204 30.6931 66.8368 35.603 69.6107C36.9618 70.2672 38.4768 70.5279 39.9758 70.3632C44.0627 70.1577 51.7468 68.4534 58.0079 59.4511C66.9994 46.5254 72.2442 42.6952 70.7461 31.2052C69.2479 19.7153 67.5443 13.7653 54.6023 11.7816C45.7795 10.4302 38.5101 5.73854 34.7721 2.89086C34.5185 2.6968 34.2596 2.51328 33.9955 2.33854C32.4592 1.31374 30.7357 0.605214 28.9247 0.254012C27.1137 -0.0971895 25.2514 -0.0840862 23.4455 0.292564C19.9865 1.06678 16.7762 2.69983 14.1085 5.04221C12.8682 6.09499 11.738 7.27186 10.7352 8.55461C9.02245 10.7441 7.68013 13.2017 6.76205 15.8288C5.47263 19.6214 3.93348 23.3237 2.15478 26.9113C1.18373 28.7584 0.523559 30.754 0.200971 32.8174C-0.254348 35.9433 0.0668137 39.1338 1.13589 42.1051Z\" fill=\"#828A9E\"/>\r\n    <path d=\"M22.1791 64.9005C22.4632 64.9004 22.736 64.7889 22.9393 64.5898C23.1427 64.3906 23.2606 64.1196 23.2679 63.8345C23.463 57.2716 19.7696 54.07 19.6113 53.9374C19.3896 53.7621 19.1087 53.68 18.8279 53.7084C18.5471 53.7367 18.2882 53.8734 18.1057 54.0896C17.9232 54.3059 17.8314 54.5847 17.8496 54.8675C17.8678 55.1503 17.9946 55.415 18.2033 55.6058C18.338 55.7226 21.252 58.32 21.0894 63.7669C21.0851 63.9105 21.109 64.0536 21.1597 64.1879C21.2105 64.3223 21.2871 64.4453 21.3852 64.5499C21.4833 64.6545 21.601 64.7387 21.7315 64.7977C21.862 64.8566 22.0028 64.8892 22.1459 64.8935L22.1791 64.9005Z\" fill=\"#62667C\"/>\r\n    <path d=\"M7.28242 38.2739C7.32539 38.2738 7.36832 38.2711 7.41098 38.266C7.69785 38.2321 7.95959 38.0852 8.13867 37.8577C8.31775 37.6301 8.39952 37.3405 8.36602 37.0524C7.70571 31.4115 9.52658 28.6157 9.54495 28.5884C9.70929 28.3497 9.77245 28.0553 9.72054 27.7698C9.66863 27.4843 9.5059 27.2313 9.26815 27.0663C9.03039 26.9013 8.7371 26.8378 8.45278 26.89C8.16846 26.9421 7.9164 27.1055 7.75207 27.3442C7.65674 27.4812 5.43531 30.7688 6.20144 37.308C6.23287 37.5738 6.36021 37.8189 6.55939 37.9969C6.75857 38.1748 7.01578 38.2734 7.28242 38.2739Z\" fill=\"#62667C\"/>\r\n    <path d=\"M50.4236 38.2739C50.5879 38.274 50.7501 38.2368 50.898 38.1651C51.046 38.0934 51.1759 37.9891 51.2781 37.8599C51.3803 37.7307 51.4521 37.58 51.4881 37.4191C51.5241 37.2581 51.5235 37.0911 51.4862 36.9304C50.3352 31.9762 45.7594 30.3947 43.5004 30.2507C43.212 30.2318 42.9279 30.3288 42.7107 30.5202C42.4934 30.7117 42.3608 30.9819 42.342 31.2715C42.3232 31.5611 42.4198 31.8463 42.6105 32.0644C42.8011 32.2825 43.0703 32.4157 43.3587 32.4345C43.5704 32.4495 48.2975 32.8429 49.3627 37.4274C49.4185 37.668 49.5537 37.8825 49.7463 38.0362C49.9389 38.1898 50.1776 38.2736 50.4236 38.2739Z\" fill=\"#62667C\"/>\r\n    <path d=\"M61.9592 41.3736C62.2254 41.3739 62.4825 41.2761 62.6816 41.0987C66.2429 37.9314 65.7007 32.6742 65.6762 32.4521C65.6443 32.1636 65.4996 31.8998 65.2739 31.7184C65.0482 31.5371 64.76 31.4533 64.4728 31.4853C64.1855 31.5173 63.9227 31.6626 63.7421 31.8892C63.5615 32.1158 63.478 32.4051 63.5099 32.6936C63.5142 32.7366 63.941 37.0551 61.236 39.4602C61.0703 39.6074 60.9532 39.8018 60.9002 40.0175C60.8472 40.2332 60.8609 40.46 60.9394 40.6677C61.0179 40.8754 61.1576 41.0542 61.3397 41.1803C61.5219 41.3064 61.738 41.3738 61.9592 41.3736Z\" fill=\"#62667C\"/>\r\n    <path d=\"M37.7999 43.38C39.8064 43.38 41.4329 42.0941 41.4329 40.5078C41.4329 38.9215 39.8064 37.6355 37.7999 37.6355C35.7935 37.6355 34.1669 38.9215 34.1669 40.5078C34.1669 42.0941 35.7935 43.38 37.7999 43.38Z\" fill=\"#62667C\"/>\r\n    <path d=\"M35.5563 57.1713C37.3806 55.508 38.223 53.4558 37.4379 52.5877C36.6527 51.7196 34.5373 52.3643 32.7129 54.0276C30.8886 55.691 30.0462 57.7431 30.8314 58.6112C31.6166 59.4794 33.732 58.8347 35.5563 57.1713Z\" fill=\"#62667C\"/>\r\n    <path d=\"M53.5611 54.8511C54.5034 52.931 54.0346 50.7645 52.5138 50.0121C50.993 49.2597 48.9963 50.2064 48.0539 52.1265C47.1116 54.0467 47.5805 56.2132 49.1012 56.9655C50.622 57.7179 52.6187 56.7713 53.5611 54.8511Z\" fill=\"#62667C\"/>\r\n    <path d=\"M20.6939 48.9003C22.3607 47.2268 21.951 44.1021 19.7788 41.9211C17.6065 39.7401 14.4944 39.3288 12.8275 41.0023C11.1607 42.6758 11.5704 45.8005 13.7427 47.9815C15.9149 50.1625 19.0271 50.5739 20.6939 48.9003Z\" fill=\"#62667C\"/>\r\n    <path d=\"M26.1423 28.2182C29.9932 27.3959 32.6326 24.452 32.0375 21.6427C31.4424 18.8335 27.8383 17.2228 23.9873 18.0451C20.1364 18.8674 17.497 21.8113 18.0921 24.6206C18.6872 27.4298 22.2914 29.0405 26.1423 28.2182Z\" fill=\"#62667C\"/>\r\n    <path d=\"M10.7352 8.55195C13.1412 10.3819 16.8573 11.5559 21.029 11.5559C28.288 11.5559 34.1678 8.00226 34.1678 3.6223C34.1672 3.18871 34.1084 2.75718 33.9929 2.33939C32.4566 1.31459 30.733 0.606069 28.9221 0.254867C27.1111 -0.096335 25.2487 -0.0832317 23.4429 0.293419C19.9849 1.06779 16.7755 2.70052 14.1085 5.04219C12.8684 6.09414 11.7381 7.27013 10.7352 8.55195Z\" fill=\"#62667C\"/>\r\n    <path d=\"M49.8008 18.1399C50.2101 18.1399 50.4664 18.1206 50.5136 18.1171C50.8017 18.0938 51.0688 17.9566 51.2561 17.7356C51.4434 17.5146 51.5356 17.2279 51.5124 16.9387C51.4892 16.6494 51.3525 16.3813 51.1324 16.1932C50.9123 16.0052 50.6268 15.9126 50.3387 15.9359C50.2626 15.942 45.2548 16.2871 42.2244 13.0812C42.0253 12.8708 41.751 12.7484 41.462 12.741C41.173 12.7336 40.893 12.8417 40.6834 13.0417C40.4738 13.2416 40.3519 13.5169 40.3446 13.8071C40.3372 14.0973 40.4449 14.3785 40.644 14.5889C43.6841 17.8027 48.0867 18.1399 49.8008 18.1399Z\" fill=\"#62667C\"/>\r\n    </svg>\r\n    )\r\n} ","import { AsteroidCardAction } from \"./AsteroidCardAction/AsteroidCardAction\"\r\nimport { AsteroidCardContent } from \"./AsteroidCardContent/AsteroidCardContent\";\r\nimport { AsteroidCardImage } from \"./AsteroidCardImage/AsteroidCardImage\";\r\nimport styles from \"./Card.module.css\"\r\nimport React from \"react\";\r\n\r\nexport const AsteroidCard = (props) =>{\r\n    const {name, date, grade, distance, size} = props;\r\n\r\n    return (<div className={styles.card}>\r\n            <div className={grade===\"опасен\"?styles.adaptSolver + \" \" + styles.cardRed:styles.adaptSolver}></div>\r\n                <AsteroidCardImage />\r\n            <AsteroidCardContent name={name} date={date} distance={distance} size={size}/>\r\n            <AsteroidCardAction grade={grade} /> \r\n        </div>)\r\n} ","import { useState } from \"react\";\r\nimport { AsteroidCard } from \"../AsteroidCard/AsteroidCard\"\r\nimport styles from  \"./MainPart.module.css\"\r\nimport React from \"react\";\r\n\r\nexport const MainPart = () => {\r\n\r\n    const MakeAsteroidsList = () =>{\r\n        let monthNames=[\r\n               'января',\r\n               'февраля',\r\n               'марта',\r\n               'апреля',\r\n               'мая',\r\n               'июня',\r\n               'июля',\r\n               'августа',\r\n               'сентября',\r\n               'октября',\r\n               'ноября',\r\n               'декабря',\r\n        ]\r\n        let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n\r\n        let list = []\r\n        for(let i = 0; i < 20; i++){\r\n            let year = \"20\" + (Math.random()*12 + 10).toFixed(0)\r\n            let name = year + ' ' + characters[(Math.random()*25).toFixed(0)] + characters[(Math.random()*25).toFixed(0)]\r\n            let date = (Math.random()*27 + 1).toFixed(0) + ' ' + monthNames[(Math.random()*11).toFixed(0)] + ' ' + year + \" года\"\r\n            let size = (Math.random() * 100 + 10).toFixed(0)\r\n            let grade = size>50? \"опасен\":\"не опасен\";\r\n            let distance = (Math.random() * 9000000 + 1000000).toFixed(0)\r\n            list.push({\r\n                name:name,\r\n                date:date,\r\n                grade:grade,\r\n                size:size,\r\n                distance:distance\r\n            })\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const [asteroids, setAsteroids] = useState({\r\n        list: MakeAsteroidsList(),\r\n        distanceMode:0,\r\n        showMode:0})\r\n\r\n    const changeShowMode = (e) => {\r\n        setAsteroids({\r\n            ...asteroids,\r\n            showMode: e.target.checked\r\n        })\r\n    }\r\n\r\n    const changeDistanceModeToKm = () => {\r\n        setAsteroids({\r\n            ...asteroids,\r\n            distanceMode: 0\r\n        })\r\n    }\r\n\r\n    const changeDistanceModeToLunar = () => {\r\n        setAsteroids({\r\n            ...asteroids,\r\n            distanceMode: 1\r\n        })\r\n    }\r\n\r\n\r\n    return <div>\r\n        Home\r\n        <div className={styles.showDangerousOnly}><input type=\"checkbox\" value={asteroids.showMode} onChange={changeShowMode}></input> Показать только опасные</div>\r\n        <div className={styles.distanceMode}>\r\n        Расстояние <button onClick={changeDistanceModeToKm} className={styles.distanceChooser + \" \" + (asteroids.distanceMode===0?styles.activeMode:\"\")}>в километрах</button>\r\n         , <button onClick={changeDistanceModeToLunar} className={styles.distanceChooser + \" \" + (asteroids.distanceMode===1?styles.activeMode:\"\")}> в дистанциях до луны</button></div>\r\n        {(asteroids.showMode === 0)?\r\n        asteroids.list.map((item)=><div>\r\n            <AsteroidCard name={item.name} grade={item.grade} date={item.date}\r\n             distance={item.distance} size={item.size} distanceMode={asteroids.distanceMode}/>\r\n        </div>):\r\n        asteroids.list.filter((item)=>item.grade===\"опасен\").map((item)=><div>\r\n            <AsteroidCard name={item.name} grade={item.grade} date={item.date}\r\n             distance={item.distance} size={item.size} distanceMode={asteroids.distanceMode}/>\r\n        </div>)}\r\n    </div>\r\n}","import { Route, Routes, Link } from 'react-router-dom';\nimport { MainPart } from './MainPart/MainPart';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Link to={'/'}>Home </Link>\n        <Link to={'about'}>About</Link>\n      </header>\n      <Routes>\n        <Route path='/' element={<MainPart />} />\n        <Route path='about' element={<label>Testing text about our company</label>} />\n      </Routes>\n    </div>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}